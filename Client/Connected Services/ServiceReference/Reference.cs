//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MakeLogin", ReplyAction="http://tempuri.org/IService/MakeLoginResponse")]
        bool MakeLogin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MakeLogin", ReplyAction="http://tempuri.org/IService/MakeLoginResponse")]
        System.Threading.Tasks.Task<bool> MakeLoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUsers", ReplyAction="http://tempuri.org/IService/GetAllUsersResponse")]
        string[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUsers", ReplyAction="http://tempuri.org/IService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<string[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUsers", ReplyAction="http://tempuri.org/IService/DeleteUsersResponse")]
        int DeleteUsers(string[] usersToDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUsers", ReplyAction="http://tempuri.org/IService/DeleteUsersResponse")]
        System.Threading.Tasks.Task<int> DeleteUsersAsync(string[] usersToDelete);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Client.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference.IService>, Client.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MakeLogin(string userName, string password) {
            return base.Channel.MakeLogin(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> MakeLoginAsync(string userName, string password) {
            return base.Channel.MakeLoginAsync(userName, password);
        }
        
        public string[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int DeleteUsers(string[] usersToDelete) {
            return base.Channel.DeleteUsers(usersToDelete);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUsersAsync(string[] usersToDelete) {
            return base.Channel.DeleteUsersAsync(usersToDelete);
        }
    }
}
